int NthRoot(int n, int m) {
  if (n == 1) return m;

  auto check = [&] (long long x, long long y)
  {
    long long ans = 1;
    while (y)
    {
      if (y&1) ans *= x;
      if (ans > m) return 2;

      x = x*x;
      y >>= 1;

      if (x > m and y >= 1) return 2;
    }
    if (ans == m) return 1;
    return 0;
  };

  int lo = 1, hi = m;
  while (lo <= hi)
  {
    int mid = (lo + hi) / 2;

    // find out whether mid^n <= m
    if (check(mid, n) == 1) return mid;
    else if (check(mid, n) == 2) hi = mid - 1;
    else lo = mid + 1;
  }
  return -1;
}
