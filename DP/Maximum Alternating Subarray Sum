#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int n;
// rec(i) -> maximum alternating sum subarray starting from index i
int rec(int i, int par, vector<int> &arr)
{
    // base case
    if (i == n) return 0;

    int op1 = -1e9, op2 = -1e9;
    if (par == 0)
    {
        op1 = arr[i] + rec(i + 1, par ^ 1, arr);
        op2 = arr[i] + rec(n, par ^ 1, arr);
    }
    else
    {
        op1 = -arr[i] + rec(i + 1, par ^ 1, arr);
        op2 = -arr[i] + rec(n, par ^ 1, arr);
    }
    return max(op1, op2);
}

void solve()
{
    cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++) cin >> a[i];
    int ans = -1e9;
    for (int i = 0; i < n; i++) ans = max(ans, rec(i, 0, a));
    cout << ans << endl;

}

int main() {
    solve();
}
