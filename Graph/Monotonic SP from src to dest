#include <bits/stdc++.h>
using namespace std;

#define int long long
int tt;
void solve();

void IO()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("Error.txt", "w", stderr);
#endif
}

void testcase(int t)
{
	cin >> t;
	while (t--) solve();
}

typedef long long ll;
typedef long double lld;

#define ff first
#define ss second
#define pi pair<int, int>
#define vi vector<int>
#define vs vector<string>
#define vc vector<char>
#define pv pair<vi, vi>
#define vpi vector<pi>
#define vvi vector<vi>
#define vvc vector<vc>
#define vvvi vector<vvi>
#define vvvvi vector<vvvi>
#define vvpi vector<vpi>
#define vvvpi vector<vvpi>
#define pb push_back
#define mp make_pair
#define arr(k) array<int, k>
#define var(k) vector<arr(k)>
#define all(v) v.begin(), v.end()
#define unq(v) v.erase(unique(all(v)), v.end());
#define len(v) (int)v.size()
#define rep(i, a, b) for(int i=a; i<b; i++)
#define each(nb, x) for (auto &nb:x)
#define pll pair<ll, ll>
#define vll vector<ll>
#define vpll vector<pll>
#define vvll vector<vll>
#define nl '\n'


/*  ------------------------    BASIC INPUT -------------------------------  */

void read() {}
void read(int &a) {cin >> a;}
void read(string &s) {cin >> s;}
void read(double &a) {cin >> a;}
void read(lld &a) {cin >> a;}
template<typename x, typename y> void read(pair<x, y> &a) {read(a.first), read(a.second);}
template<typename x>void read(x &a) {for (auto  &i : a) read(i);}
template<typename x, typename... y> void read(x& a, y&... b) {read(a); read(b...);}
template<class T> void cmin(T&a, T b) {a = min(a, b);}
template<class T> void cmax(T&a, T b) {a = max(a, b);}

/*    ------------------------------------------------------------------   */


/* -------------------------------------  DEBUG STARTS ------------------------------- */

#ifndef ONLINE_JUDGE
#define dbg(x) cerr << #x << " = "; _print(x); cerr << endl;
#else
#define dbg(x)
#endif

void print(int t) {cout << t;}
void print(string t) {cout << t;}
void print(char t) {cout << t;}
void print(lld t) {cout << t;}
void print(double t) {cout << t;}
void print(bool t) {cout << t;}
void print(deque<int> t) {while (not t.empty()) {cout << t.front() << ' '; t.pop_front();}}
void print(queue<int> t) {while (not t.empty()) {cout << t.front() << ' '; t.pop();}}

void _print(int t) {cerr << t;}
void _print(string t) {cerr << t;}
void _print(char t) {cerr << t;}
void _print(lld t) {cerr << t;}
void _print(double t) {cerr << t;}
void _print(bool t) {cerr << t;}
void _print(deque<int> t) {while (not t.empty()) {cerr << t.front() << ' '; t.pop_front();}}
void _print(queue<int> t) {while (not t.empty()) {cerr << t.front() << ' '; t.pop();}}

template <class T, class V> void print(pair <T, V> p);
template <class T> void print(vector <T> v);
template <class T, class V> void print(pair <T, V> p) {print(p.ff); cout << " "; print(p.ss);}
template <class T> void print(vector <T> v) {for (T i : v) {print(i); cout << " ";}}

template <class T, class V> void _print(pair <T, V> p);
template <class T> void _print(vector <T> v);
template <class T> void _print(set <T> v);
template <class T, class V> void _print(map <T, V> v);
template <class T> void _print(multiset <T> v);
template <class T, class V> void _print(pair <T, V> p) {cerr << "{"; _print(p.ff); cerr << ","; _print(p.ss); cerr << "}";}
template <class T> void _print(vector <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(set <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T> void _print(multiset <T> v) {cerr << "[ "; for (T i : v) {_print(i); cerr << " ";} cerr << "]";}
template <class T, class V> void _print(map <T, V> v) {cerr << "[ "; for (auto i : v) {_print(i); cerr << " ";} cerr << "]";}

/* -------------------------------------  DEBUG ENDS --------------------------------- */

int n, m;
const int inf = 1e18;

void solve()
{
	int src, dest;
	cin >> n >> m >> src >> dest;
	vector<pair<int, double>> g[n + 1];
	rep(i, 0, m)
	{
		int u, v; cin >> u >> v;
		double w; cin >> w;
		g[u].pb({v, w});
	}

	// {d,prevEdgeWt,inc/dec,cur}
	set<pair<array<double,2>, arr(2)>> s;
	vector<vector<double>> dist(n+1, vector<double> (2, inf));
	vvi vis(n+1, vi(2, 0));
	s.insert({{0.0,inf}, {0,src}});
	s.insert({{0.0,0.0}, {1,src}});

	while (not s.empty())
	{
		auto it = s.begin();
		double d = it->ff.at(0), prev = it->ff.at(1);
		int cur = it->ss.at(1), f = it->ss.at(0);
		s.erase(it);

		if (vis[cur][f]) continue;
		vis[cur][f] = 1;
		dist[cur][f] = d;

		for (auto nb : g[cur])
		{
			if (f==0)
			{
				if (nb.ss < prev) s.insert({{d+nb.ss,nb.ss}, {f, nb.ff}});
			}
			else
			{
				if (nb.ss > prev) s.insert({{d+nb.ss,nb.ss}, {f, nb.ff}});
			}
		}
	}
	cout << dist[dest][0] << ' ' << dist[dest][1] << nl;
}	

signed main()
{
	IO();

	// testcase(tt);
	solve();
}
